[{"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\index.tsx":"1","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\reportWebVitals.ts":"2","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\App.tsx":"3","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\routes\\index.tsx":"4","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\UserFeed.tsx":"5","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Header\\Header.tsx":"6","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\eaxios.tsx":"7","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\GlobalFeed\\GlobalFeed.tsx":"8","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Utils\\StyleUtils.tsx":"9","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\FeedMaster\\FeedMaster.tsx":"10","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Tags\\Tags.tsx":"11","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Tags\\TagsListing.tsx":"12","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Paginate.tsx":"13"},{"size":592,"mtime":1612020088677,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":237,"mtime":1612063159104,"results":"17","hashOfConfig":"15"},{"size":277,"mtime":1612073768209,"results":"18","hashOfConfig":"15"},{"size":120,"mtime":1612018994610,"results":"19","hashOfConfig":"15"},{"size":356,"mtime":1612179101788,"results":"20","hashOfConfig":"15"},{"size":526,"mtime":1612069259292,"results":"21","hashOfConfig":"15"},{"size":3750,"mtime":1612186445523,"results":"22","hashOfConfig":"15"},{"size":624,"mtime":1612072303650,"results":"23","hashOfConfig":"15"},{"size":2509,"mtime":1612183609807,"results":"24","hashOfConfig":"15"},{"size":2023,"mtime":1612162983528,"results":"25","hashOfConfig":"15"},{"size":2629,"mtime":1612166989410,"results":"26","hashOfConfig":"15"},{"size":1015,"mtime":1612179972221,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17bit3y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\index.tsx",[],["57","58"],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\reportWebVitals.ts",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\App.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\routes\\index.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\UserFeed.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Header\\Header.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\eaxios.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\GlobalFeed\\GlobalFeed.tsx",["59"],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Utils\\StyleUtils.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\FeedMaster\\FeedMaster.tsx",[],"E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Tags\\Tags.tsx",["60"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../eaxios\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { modalStyles, getModalStyle } from \"../../Utils/StyleUtils\";\r\nimport \"./Tags.css\";\r\ninterface Props {\r\n  tagsHandler: any;\r\n}\r\nconst Tags: React.FC<Partial<Props>> = (props) => {\r\n  const [tags, setTags] = useState<string[]>([]);\r\n  const [fetchTagError, setFetchTagError] = useState<boolean>(false);\r\n  const [tagErrorMessage, setTagErrorMessage] = useState<string>(\"\");\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const closeErrorModal = () => {\r\n    setFetchTagError(false);\r\n  };\r\n\r\n  const fetchTags = async () => {\r\n    try {\r\n      let res = await axios.get(`tags`);\r\n      return res.data.tags;\r\n    } catch (e) {\r\n      setTagErrorMessage(e.message);\r\n      setFetchTagError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const tags = await fetchTags();\r\n      setTags(tags);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sidebar\">\r\n        <h3>Popular Tags</h3>\r\n        <div className=\"tags-list\">\r\n          {tags?.length > 0\r\n            ? tags.map((tag) => {\r\n                return (\r\n                  <a\r\n                    className=\"tags-default tag-pill\"\r\n                    onClick={() => props.tagsHandler(tag)}\r\n                  >\r\n                    {tag}\r\n                  </a>\r\n                );\r\n              })\r\n            : \"Populating tags..\"}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={fetchTagError}\r\n        onClose={closeErrorModal}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div style={modalStyle} className={modalStyles().paper}>\r\n          <h2 id=\"simple-modal-title\">Error</h2>\r\n          <p id=\"simple-modal-description\">{tagErrorMessage}</p>\r\n          <button onClick={closeErrorModal}>Close</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Tags\\TagsListing.tsx",["61","62","63","64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../Paginate\";\r\nimport axios from \"../../eaxios\";\r\ninterface Props {\r\n  tagApi: boolean;\r\n  tagName: string;\r\n}\r\n\r\nconst TagsListing: React.FC<Props> = (props) => {\r\n  const [articles, setArticle] = useState<{}[]>([]);\r\n  const [error, setErrorMessage] = useState<string>(\"\");\r\n  const [errorModal, setErrorModal] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [postsPerPage] = useState<number>(10);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage - 10;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n  // Change page\r\n  const paginate = (pageNumber: any) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const fetchTag = async (tagName: string, offset: number) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `articles?tag=${tagName}&limit=10&offset=${offset}`\r\n      );\r\n      setArticle(res.data.articles);\r\n    } catch (e) {\r\n      setErrorMessage(e.message);\r\n    }\r\n  };\r\n\r\n  const likeHandler = async (param: string) => {\r\n    try {\r\n      await axios.post(`articles/${param}/favorite`);\r\n    } catch (e) {\r\n      setErrorMessage(e.message);\r\n      setErrorModal(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setArticle([]);\r\n    fetchTag(props.tagName, indexOfLastPost);\r\n  }, [props.tagApi, currentPage]);\r\n\r\n  return (\r\n    <div>\r\n      {articles?.length > 0\r\n        ? articles.map((article: any) => {\r\n            return (\r\n              <div className=\"container\">\r\n                <div>\r\n                  <div>\r\n                    <img src=\"https://static.productionready.io/images/smiley-cyrus.jpg\" />\r\n                    <p>{article?.author?.username}</p>\r\n                  </div>\r\n\r\n                  <h3>{article.title}</h3>\r\n                  <p>{article.description}</p>\r\n                  <span>Read More...</span>\r\n                  <hr></hr>\r\n                </div>\r\n                <div>\r\n                  <span\r\n                    className=\"likeBtn\"\r\n                    onClick={() => likeHandler(article.slug)}\r\n                  >\r\n                    Like\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        : \"Loading tags..\"}\r\n      <div>\r\n        {articles.length > 0 ? (\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={500}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsListing;\r\n","E:\\Others\\React Js - Projects\\conduit\\conduit\\src\\Dashboard\\Paginate.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":23,"column":9,"nodeType":"72","messageId":"73","endLine":23,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":44,"column":19,"nodeType":"76","endLine":47,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":11,"column":10,"nodeType":"72","messageId":"73","endLine":11,"endColumn":15},{"ruleId":"70","severity":1,"message":"78","line":12,"column":10,"nodeType":"72","messageId":"73","endLine":12,"endColumn":20},{"ruleId":"70","severity":1,"message":"79","line":18,"column":9,"nodeType":"72","messageId":"73","endLine":18,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":48,"column":6,"nodeType":"82","endLine":48,"endColumn":33,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":58,"column":21,"nodeType":"76","endLine":58,"endColumn":92},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'likeHandler' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'errorModal' is assigned a value but never used.","'indexOfFirstPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'indexOfLastPost' and 'props.tagName'. Either include them or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [props.tagApi, currentPage, props.tagName, indexOfLastPost]",{"range":"91","text":"92"},[1376,1403],"[props.tagApi, currentPage, props.tagName, indexOfLastPost]"]